#!/usr/bin/env node
const wrapapi = require('../wrapapi')
const mongo = require('../mongo')
const slack = require('../slack')

const dayOfWeek = new Date().getDay();
const isWeekend = (dayOfWeek == 6) || (dayOfWeek == 0); // 6 = Saturday, 0 = Sunday

if (!isWeekend) {
  return false // TODO: need to change this once it goes live
} else {
  sendGlassdoorReviews()
}

async function sendGlassdoorReviews () {
  const newGlassdoorReviews = wrapapi.getNewGlassdoorReviews()
  const existingGlassdoorReviews = mongo.getAllGlassdoorReviews()

  Promise.all([newGlassdoorReviews, existingGlassdoorReviews])
    .then(values => {
      const newReviews = values[0]
      const oldReviews = values[1]
      
      /* for each review, check if we've saved it to mongodb
         if we did, that means we've sent it to slack already
         if we  didn't, send to slack and save to mongo */
      
      let reviewsToSendToSlack = []
      
      for (const review of newReviews) {
        if (oldReviews.filter(r => r.glassdoorId === review.id).length > 0) {
          // this review has been made already
        } else {
          // send this as part of the slack message and then save it
          // slack message function here
          reviewsToSendToSlack.push(review)
        }
      }
      
      // only send to slack if there are new reviews
      if (reviewsToSendToSlack.length > 0) {
        slack.sendReviews(reviewsToSendToSlack)
          .then(success => {
            reviewsToSendToSlack.forEach((review, index) => {
              mongo.saveGlassdoorReview(review.id)
              if (index + 1 === reviewsToSendToSlack.length) {
                return
              }
            })  
          })
      } else {
        return
      }
    })
}
